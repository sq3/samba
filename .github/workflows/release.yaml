# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish a Docker image

on:
  push:
    branches: ['master']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  hadolint:
    name: Run hadolint
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: hadolint
      uses: reviewdog/action-hadolint@v1.34.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: github-pr-review
        filter_mode: diff_context
        fail_on_error: true

  build:
    name: build
    runs-on: ubuntu-20.04
    needs:
    - hadolint
    # permissions:
    #   contents: read
    #   packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          BUILD_DATE=$(date --rfc-3339=seconds --utc)
          echo ::set-output name=build_date::"${BUILD_DATE}"
          VERSION=$(cat ./VERSION)
          echo ::set-output name=version::${VERSION}
          if [ "${{github.event_name}}" == "pull_request" ]; then
            echo ::set-output name=push::false
          else
            echo ::set-output name=push::true
          fi

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          build-args: VERSION=${{ steps.prep.outputs.version }}
          labels: |
            org.opencontainers.image.created=${{ steps.prep.outputs.build_date }}
          context: .
          push: ${{ steps.prep.outputs.push }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.prep.outputs.version }}
